service: service
frameworkVersion: "2"
provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: eu-west-1
  environment:
    JOB_TABLE: ${self:custom.tableName}
    STAGE: ${opt:stage, self:provider.stage}
  apiGateway:
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - { "Fn::GetAtt": ["JobDynamoDBTable", "Arn"] }
plugins:
  - serverless-webpack
  - serverless-localstack
package:
  individually: true
functions:
  complete:
    handler: src/functions/complete/complete.handler
    timeout: 30
    events:
      - http:
          path: complete
          method: post
  webhook:
    handler: src/functions/webhook/webhook.handler
    timeout: 30
    events:
      - http:
          path: webhook
          method: post
custom:
  tableName: "jobs"
  defaultStage: local
  profile: default
  webpack:
    webpackConfig: "webpack.config.js"
    includeModules:
      forceExclude:
        - aws-sdk
    excludeFiles: src/**/*.test.js
  localstack:
    host: http://localhost
    endpointFile: localstack_endpoints.json
    edgePort: 4566
    stages:
      - dev
      - local
    debug: true
resources:
  Resources:
    JobDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: jobId
            AttributeType: S
          - AttributeName: providerId
            AttributeType: S
        KeySchema:
          - AttributeName: jobId
            KeyType: HASH
          - AttributeName: providerId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
